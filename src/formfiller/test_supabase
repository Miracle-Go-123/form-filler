######### Client Side ##########
import os
from dotenv import load_dotenv
load_dotenv()


from supabase import create_client

url = "https://your-project.supabase.co"
api_key = "your-anon-key"
supabase = create_client(url, api_key)

bucket_name = "your-bucket-name"
file_path = "path/to/your/file.txt"
expires_in = 60  # URL expires in 60 seconds

response = supabase.storage.from_(bucket_name).create_signed_url(file_path, expires_in)
signed_url = response.get("signedURL")



######### Server Side ##########
from fastapi import FastAPI, HTTPException
from fastapi.responses import FileResponse
import httpx
import os

app = FastAPI()

@app.post("/download-file/")
async def download_file(signed_url: str):
    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(signed_url)
            response.raise_for_status()
            file_content = response.content

        file_name = signed_url.split("?")[0].split("/")[-1]
        file_path = f"/tmp/{file_name}"

        with open(file_path, "wb") as file:
            file.write(file_content)

        return FileResponse(file_path, filename=file_name)
    except httpx.HTTPStatusError as exc:
        raise HTTPException(status_code=exc.response.status_code, detail="Error downloading file")
    except Exception as e:
        raise HTTPException(status_code=500, detail="An unexpected error occurred")


